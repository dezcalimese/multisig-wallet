{"ast":null,"code":"import _regeneratorRuntime from\"/Users/benzo/multisig-wallet/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/benzo/multisig-wallet/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import Web3 from'web3';import Wallet from'./contracts/Wallet.json';var getWeb3=function getWeb3(){return new Promise(function(resolve,reject){window.addEventListener('load',/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var web3;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!window.ethereum){_context.next=13;break;}web3=new Web3(window.ethereum);_context.prev=2;_context.next=5;return window.ethereum.enable();case 5:resolve(web3);_context.next=11;break;case 8:_context.prev=8;_context.t0=_context[\"catch\"](2);reject(_context.t0);case 11:_context.next=14;break;case 13:if(window.web3){resolve(window.web3);}else{reject('Must install Metamask');}case 14:case\"end\":return _context.stop();}}},_callee,null,[[2,8]]);})));});};var getWallet=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(web3){var networkId,deployedNetwork;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return web3.eth.net.getId();case 2:networkId=_context2.sent;deployedNetwork=Wallet.networks[networkId];return _context2.abrupt(\"return\",new web3.eth.Contract(Wallet.abi,deployedNetwork&&deployedNetwork.address));case 5:case\"end\":return _context2.stop();}}},_callee2);}));return function getWallet(_x){return _ref2.apply(this,arguments);};}();export{getWeb3,getWallet};","map":{"version":3,"sources":["/Users/benzo/multisig-wallet/client/src/utils.js"],"names":["Web3","Wallet","getWeb3","Promise","resolve","reject","window","addEventListener","ethereum","web3","enable","getWallet","eth","net","getId","networkId","deployedNetwork","networks","Contract","abi","address"],"mappings":"iTAAA,MAAOA,CAAAA,IAAP,KAAiB,MAAjB,CACA,MAAOC,CAAAA,MAAP,KAAmB,yBAAnB,CAEA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAAM,CAClB,MAAO,IAAIC,CAAAA,OAAJ,CAAY,SAACC,OAAD,CAAUC,MAAV,CAAqB,CACpCC,MAAM,CAACC,gBAAP,CAAwB,MAAxB,sEAAgC,gJACzBD,MAAM,CAACE,QADkB,0BAElBC,IAFkB,CAEX,GAAIT,CAAAA,IAAJ,CAASM,MAAM,CAACE,QAAhB,CAFW,uCAIdF,CAAAA,MAAM,CAACE,QAAP,CAAgBE,MAAhB,EAJc,QAKpBN,OAAO,CAACK,IAAD,CAAP,CALoB,+EAOpBJ,MAAM,aAAN,CAPoB,uCASnB,GAAGC,MAAM,CAACG,IAAV,CAAgB,CACrBL,OAAO,CAACE,MAAM,CAACG,IAAR,CAAP,CACH,CAFQ,IAEF,CACHJ,MAAM,CAAC,uBAAD,CAAN,CACH,CAb2B,oEAAhC,IAeH,CAhBM,CAAP,CAiBH,CAlBD,CAoBA,GAAMM,CAAAA,SAAS,2FAAG,kBAAMF,IAAN,2KACUA,CAAAA,IAAI,CAACG,GAAL,CAASC,GAAT,CAAaC,KAAb,EADV,QACRC,SADQ,gBAERC,eAFQ,CAEUf,MAAM,CAACgB,QAAP,CAAgBF,SAAhB,CAFV,kCAGP,GAAIN,CAAAA,IAAI,CAACG,GAAL,CAASM,QAAb,CACHjB,MAAM,CAACkB,GADJ,CAEHH,eAAe,EAAIA,eAAe,CAACI,OAFhC,CAHO,0DAAH,kBAATT,CAAAA,SAAS,6CAAf,CASA,OAAST,OAAT,CAAkBS,SAAlB","sourcesContent":["import Web3 from 'web3';\nimport Wallet from './contracts/Wallet.json';\n\nconst getWeb3 = () => {\n    return new Promise((resolve, reject) => {\n        window.addEventListener('load', async () => {\n            if(window.ethereum) {\n                const web3 = new Web3(window.ethereum);\n                try {\n                    await window.ethereum.enable();\n                    resolve(web3);\n                } catch(error) {\n                    reject(error);\n                }\n            }   else if(window.web3) {\n                resolve(window.web3);\n            } else {\n                reject('Must install Metamask');\n            }\n        });\n    });\n};\n\nconst getWallet = async web3 => {\n    const networkId = await web3.eth.net.getId();\n    const deployedNetwork = Wallet.networks[networkId];\n    return new web3.eth.Contract(\n        Wallet.abi,\n        deployedNetwork && deployedNetwork.address\n    );\n};\n\nexport { getWeb3, getWallet };"]},"metadata":{},"sourceType":"module"}