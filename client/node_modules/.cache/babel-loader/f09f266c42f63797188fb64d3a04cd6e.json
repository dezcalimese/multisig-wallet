{"ast":null,"code":"var _jsxFileName = \"/Users/benzo/multisig-wallet/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { getWeb3, getWallet } from './utils.js';\nimport Header from './Header.js';\nimport NewTransfer from './NewTransfer.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [web3, setWeb3] = useState(undefined);\n  const [accounts, setAccounts] = useState(undefined);\n  const [wallet, setWallet] = useState(undefined);\n  const [approvers, setApprovers] = useState([]);\n  const [quorum, setQuorum] = useState(undefined);\n  useEffect(() => {\n    const init = async () => {\n      const web3 = getWeb3();\n      const accounts = await web3.eth.getAccounts();\n      const wallet = await getWallet(web3);\n      const approvers = await wallet.methods.getApprovers().call();\n      const quorum = await wallet.methods.quorum().call();\n      setWeb3(web3);\n      setAccounts(accounts);\n      setWallet(wallet);\n      setApprovers(approvers);\n      setQuorum(quorum);\n    };\n\n    init();\n  }, []);\n\n  const createTransfer = transfer => {\n    wallet.methods.createTransfer(transfer.amount, transfer.to).send({\n      from: accounts[0]\n    });\n  };\n\n  if (typeof web3 === 'undefined' || typeof accounts === 'undefined' || typeof wallet === 'undefined' || approvers.length === 0 || typeof quorum === 'undefined') {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Multisig Dapp\", /*#__PURE__*/_jsxDEV(Header, {\n      approvers: approvers,\n      quorum: quorum\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(NewTransfer, {\n      createTransfer: createTransfer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"ye82nlzp51OoxANoPlbe56VZcCk=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/benzo/multisig-wallet/client/src/App.js"],"names":["React","useEffect","useState","getWeb3","getWallet","Header","NewTransfer","App","web3","setWeb3","undefined","accounts","setAccounts","wallet","setWallet","approvers","setApprovers","quorum","setQuorum","init","eth","getAccounts","methods","getApprovers","call","createTransfer","transfer","amount","to","send","from","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,EAAkBC,SAAlB,QAAmC,YAAnC;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,WAAP,MAAwB,kBAAxB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAACQ,SAAD,CAAhC;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAACQ,SAAD,CAAxC;AACA,QAAM,CAACG,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAACQ,SAAD,CAApC;AACA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4Bd,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACe,MAAD,EAASC,SAAT,IAAsBhB,QAAQ,CAACQ,SAAD,CAApC;AAEAT,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMkB,IAAI,GAAG,YAAY;AACvB,YAAMX,IAAI,GAAGL,OAAO,EAApB;AACA,YAAMQ,QAAQ,GAAG,MAAMH,IAAI,CAACY,GAAL,CAASC,WAAT,EAAvB;AACA,YAAMR,MAAM,GAAG,MAAMT,SAAS,CAACI,IAAD,CAA9B;AACA,YAAMO,SAAS,GAAG,MAAMF,MAAM,CAACS,OAAP,CAAeC,YAAf,GAA8BC,IAA9B,EAAxB;AACA,YAAMP,MAAM,GAAG,MAAMJ,MAAM,CAACS,OAAP,CAAeL,MAAf,GAAwBO,IAAxB,EAArB;AACAf,MAAAA,OAAO,CAACD,IAAD,CAAP;AACAI,MAAAA,WAAW,CAACD,QAAD,CAAX;AACAG,MAAAA,SAAS,CAACD,MAAD,CAAT;AACAG,MAAAA,YAAY,CAACD,SAAD,CAAZ;AACAG,MAAAA,SAAS,CAACD,MAAD,CAAT;AACD,KAXD;;AAYAE,IAAAA,IAAI;AACL,GAdQ,EAcN,EAdM,CAAT;;AAgBA,QAAMM,cAAc,GAAGC,QAAQ,IAAI;AACjCb,IAAAA,MAAM,CAACS,OAAP,CACGG,cADH,CACkBC,QAAQ,CAACC,MAD3B,EACmCD,QAAQ,CAACE,EAD5C,EAEGC,IAFH,CAEQ;AAACC,MAAAA,IAAI,EAAEnB,QAAQ,CAAC,CAAD;AAAf,KAFR;AAGD,GAJD;;AAMA,MACE,OAAOH,IAAP,KAAgB,WAAhB,IACG,OAAOG,QAAP,KAAoB,WADvB,IAEG,OAAOE,MAAP,KAAkB,WAFrB,IAGGE,SAAS,CAACgB,MAAV,KAAqB,CAHxB,IAIG,OAAOd,MAAP,KAAkB,WALvB,EAME;AACA,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE;AAAA,6CAEI,QAAC,MAAD;AAAQ,MAAA,SAAS,EAAEF,SAAnB;AAA8B,MAAA,MAAM,EAAEE;AAAtC;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,WAAD;AAAa,MAAA,cAAc,EAAEQ;AAA7B;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GA9CQlB,G;;KAAAA,G;AAgDT,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { getWeb3, getWallet } from './utils.js';\nimport Header from './Header.js';\nimport NewTransfer from './NewTransfer.js';\n\nfunction App() {\n  const [web3, setWeb3] = useState(undefined);\n  const [accounts, setAccounts] = useState(undefined);\n  const [wallet, setWallet] = useState(undefined);\n  const [approvers, setApprovers] = useState([]);\n  const [quorum, setQuorum] = useState(undefined);\n\n  useEffect(() => {\n    const init = async () => {\n      const web3 = getWeb3();\n      const accounts = await web3.eth.getAccounts();\n      const wallet = await getWallet(web3);\n      const approvers = await wallet.methods.getApprovers().call();\n      const quorum = await wallet.methods.quorum().call();\n      setWeb3(web3);\n      setAccounts(accounts);\n      setWallet(wallet);\n      setApprovers(approvers);\n      setQuorum(quorum);\n    };\n    init();\n  }, []);\n\n  const createTransfer = transfer => {\n    wallet.methods\n      .createTransfer(transfer.amount, transfer.to)\n      .send({from: accounts[0]});\n  }\n\n  if(\n    typeof web3 === 'undefined'\n    || typeof accounts === 'undefined'\n    || typeof wallet === 'undefined'\n    || approvers.length === 0\n    || typeof quorum === 'undefined'\n  ) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div>\n        Multisig Dapp\n        <Header approvers={approvers} quorum={quorum} />\n        <NewTransfer createTransfer={createTransfer} />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}