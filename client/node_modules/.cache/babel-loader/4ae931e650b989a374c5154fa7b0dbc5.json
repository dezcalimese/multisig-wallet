{"ast":null,"code":"var _jsxFileName = \"/Users/benzo/multisig-wallet/client/src/NewTransfer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction NewTransfer({\n  createTransfer\n}) {\n  _s();\n\n  const [transfer, setTransfer] = useState(undefined);\n\n  const submut = e => {\n    e.preventDefault();\n    createTransfer(transfer);\n  };\n\n  const updateTransfer = (e, field) => {\n    const value = e.target.value;\n    setTransfer({ ...transfer,\n      [field]: value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create transfer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => submit(e),\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"amount\",\n        children: \"Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"amount\",\n        type: \"text\",\n        onChange: e => updateTransfer(e, 'amount')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"to\",\n        children: \"To\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"to\",\n        type: \"text\",\n        onChange: e => updateTransfer(e, 'to')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n}\n\n_s(NewTransfer, \"cBI2kpEtZaMpOKTmCtjTsX7+9Mo=\");\n\n_c = NewTransfer;\nexport default NewTransfer;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewTransfer\");","map":{"version":3,"sources":["/Users/benzo/multisig-wallet/client/src/NewTransfer.js"],"names":["React","useState","NewTransfer","createTransfer","transfer","setTransfer","undefined","submut","e","preventDefault","updateTransfer","field","value","target","submit"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,SAASC,WAAT,CAAqB;AAACC,EAAAA;AAAD,CAArB,EAAuC;AAAA;;AACnC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BJ,QAAQ,CAACK,SAAD,CAAxC;;AAEA,QAAMC,MAAM,GAAGC,CAAC,IAAI;AAChBA,IAAAA,CAAC,CAACC,cAAF;AACAN,IAAAA,cAAc,CAACC,QAAD,CAAd;AACH,GAHD;;AAKA,QAAMM,cAAc,GAAG,CAACF,CAAD,EAAIG,KAAJ,KAAc;AACjC,UAAMC,KAAK,GAAGJ,CAAC,CAACK,MAAF,CAASD,KAAvB;AACAP,IAAAA,WAAW,CAAC,EAAC,GAAGD,QAAJ;AAAc,OAACO,KAAD,GAASC;AAAvB,KAAD,CAAX;AACH,GAHD;;AAKA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAM,MAAA,QAAQ,EAAGJ,CAAD,IAAOM,MAAM,CAACN,CAAD,CAA7B;AAAA,8BACI;AAAO,QAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AACI,QAAA,EAAE,EAAC,QADP;AAEI,QAAA,IAAI,EAAC,MAFT;AAGI,QAAA,QAAQ,EAAEA,CAAC,IAAIE,cAAc,CAACF,CAAD,EAAI,QAAJ;AAHjC;AAAA;AAAA;AAAA;AAAA,cAFJ,eAOI;AAAO,QAAA,OAAO,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ,eAQI;AACI,QAAA,EAAE,EAAC,IADP;AAEI,QAAA,IAAI,EAAC,MAFT;AAGI,QAAA,QAAQ,EAAEA,CAAC,IAAIE,cAAc,CAACF,CAAD,EAAI,IAAJ;AAHjC;AAAA;AAAA;AAAA;AAAA,cARJ,eAaI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBH;;GAjCQN,W;;KAAAA,W;AAmCT,eAAeA,WAAf","sourcesContent":["import React, { useState } from 'react';\n\nfunction NewTransfer({createTransfer}) {\n    const [transfer, setTransfer] = useState(undefined);\n\n    const submut = e => {\n        e.preventDefault();\n        createTransfer(transfer);\n    }\n\n    const updateTransfer = (e, field) => {\n        const value = e.target.value;\n        setTransfer({...transfer, [field]: value});\n    }\n\n    return (\n        <div>\n            <h2>Create transfer</h2>\n            <form onSubmit={(e) => submit(e)}>\n                <label htmlFor=\"amount\">Amount</label>\n                <input\n                    id=\"amount\"\n                    type=\"text\"\n                    onChange={e => updateTransfer(e, 'amount')}\n                />\n                <label htmlFor=\"to\">To</label>\n                <input\n                    id=\"to\"\n                    type=\"text\"\n                    onChange={e => updateTransfer(e, 'to')}\n                />\n                <button>Submit</button>\n            </form>\n        </div>\n    )\n}\n\nexport default NewTransfer;"]},"metadata":{},"sourceType":"module"}